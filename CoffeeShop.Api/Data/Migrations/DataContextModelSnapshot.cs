// <auto-generated />
using System;
using CoffeeShop.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeShop.Api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoffeeShop.Api.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "burgers.png",
                            Name = "Burgers"
                        },
                        new
                        {
                            Id = 2,
                            Image = "desserts.png",
                            Name = "Dessarts"
                        },
                        new
                        {
                            Id = 3,
                            Image = "drinks.png",
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 4,
                            Image = "nonveg.png",
                            Name = "Non-Veg"
                        },
                        new
                        {
                            Id = 5,
                            Image = "pizza.png",
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = 6,
                            Image = "rice.png",
                            Name = "Rice"
                        },
                        new
                        {
                            Id = 7,
                            Image = "seafood.png",
                            Name = "Seafood"
                        },
                        new
                        {
                            Id = 8,
                            Image = "soups.png",
                            Name = "Soups"
                        },
                        new
                        {
                            Id = 9,
                            Image = "veg.png",
                            Name = "Veg"
                        });
                });

            modelBuilder.Entity("CoffeeShop.Api.Data.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BgColor")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OfferType")
                        .HasColumnType("int");

                    b.Property<decimal>("OfferedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ValidTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Offer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BgColor = "Red",
                            Code = "OFF-50",
                            Description = "50 Percent off on all food items",
                            Image = "percent_50p.npg",
                            IsActive = true,
                            Name = "50 Percent Off",
                            OfferType = 1,
                            OfferedValue = 50m,
                            ValidTill = new DateTime(2024, 2, 3, 22, 35, 6, 126, DateTimeKind.Local).AddTicks(5496)
                        },
                        new
                        {
                            Id = 2,
                            BgColor = "Red",
                            Code = "HOT-80",
                            Description = "Hot Offer",
                            Image = "hot_offer.png",
                            IsActive = true,
                            Name = "Hot Offer",
                            OfferType = 1,
                            OfferedValue = 80m,
                            ValidTill = new DateTime(2024, 1, 29, 22, 35, 6, 126, DateTimeKind.Local).AddTicks(5558)
                        },
                        new
                        {
                            Id = 3,
                            BgColor = "Yellow",
                            Code = "UPTO-25",
                            Description = "Upto 25 OFF",
                            Image = "upto_25_percent.png",
                            IsActive = true,
                            MinAmount = 500m,
                            Name = "Up to 25% OFF",
                            OfferType = 1,
                            OfferedValue = 25m
                        },
                        new
                        {
                            Id = 4,
                            BgColor = "Red",
                            Code = "HALF",
                            Description = "Half Price",
                            Image = "half_price.png",
                            IsActive = true,
                            MinAmount = 1000m,
                            Name = "Half Price",
                            OfferType = 1,
                            OfferedValue = 50m,
                            ValidTill = new DateTime(2024, 1, 29, 22, 35, 6, 126, DateTimeKind.Local).AddTicks(5564)
                        },
                        new
                        {
                            Id = 5,
                            BgColor = "Red",
                            Code = "100-TODAY",
                            Description = "Flat Euros 100 Off Today Only",
                            Image = "today_only.png",
                            IsActive = true,
                            Name = "Flat Euros 100 off Today Only",
                            OfferType = 0,
                            OfferedValue = 100m,
                            ValidTill = new DateTime(2024, 1, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            BgColor = "#FFFFFF",
                            Code = "OFF",
                            Description = "50",
                            Image = "thirty_percent.png",
                            IsActive = true,
                            MinAmount = 300m,
                            Name = "30% OFF",
                            OfferType = 1,
                            OfferedValue = 30m,
                            ValidTill = new DateTime(2024, 2, 27, 22, 35, 6, 126, DateTimeKind.Local).AddTicks(5571)
                        },
                        new
                        {
                            Id = 7,
                            BgColor = "Red",
                            Code = "FEST-150",
                            Description = "Special Festival Offer",
                            Image = "special_offer.png",
                            IsActive = true,
                            Name = "Special Festival Offer",
                            OfferType = 0,
                            OfferedValue = 150m,
                            ValidTill = new DateTime(2024, 2, 1, 22, 35, 6, 126, DateTimeKind.Local).AddTicks(5575)
                        },
                        new
                        {
                            Id = 8,
                            BgColor = "Gray",
                            Code = "SALE-40",
                            Description = "SALE 40% OFF",
                            Image = "sale_40_percent.png",
                            IsActive = true,
                            Name = "SALE 40% OFF",
                            OfferType = 1,
                            OfferedValue = 40m,
                            ValidTill = new DateTime(2024, 1, 31, 22, 35, 6, 126, DateTimeKind.Local).AddTicks(5577)
                        },
                        new
                        {
                            Id = 9,
                            BgColor = "Red",
                            Code = "OFF-50",
                            Description = "50% OFF",
                            Image = "fifty_percent_off.png",
                            IsActive = true,
                            Name = "50% OFF",
                            OfferType = 1,
                            OfferedValue = 50m,
                            ValidTill = new DateTime(2024, 1, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
